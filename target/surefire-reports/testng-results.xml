<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="RegSuite" duration-ms="64221" started-at="2020-03-11T13:16:05 IST" finished-at="2020-03-11T13:17:10 IST">
    <groups>
    </groups>
    <test name="Test1" duration-ms="64221" started-at="2020-03-11T13:16:05 IST" finished-at="2020-03-11T13:17:10 IST">
      <class name="TestScripts.InvalidLogin">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestScripts.InvalidLogin@cb644e]" name="setup" is-config="true" duration-ms="7246" started-at="2020-03-11T13:16:22 IST" finished-at="2020-03-11T13:16:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="testInvalidLogin()[pri:0, instance:TestScripts.InvalidLogin@cb644e]" name="testInvalidLogin" duration-ms="5539" started-at="2020-03-11T13:16:30 IST" finished-at="2020-03-11T13:16:35 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.fail(Assert.java:102)
at TestScripts.InvalidLogin.testInvalidLogin(InvalidLogin.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:TestScripts.InvalidLogin@cb644e]" name="tearDown" is-config="true" duration-ms="1195" started-at="2020-03-11T13:16:35 IST" finished-at="2020-03-11T13:16:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=FAILURE method=InvalidLogin.testInvalidLogin()[pri:0, instance:TestScripts.InvalidLogin@cb644e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestScripts.InvalidLogin -->
      <class name="TestScripts.ValidLogin">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestScripts.ValidLogin@5cb9f472]" name="setup" is-config="true" duration-ms="10445" started-at="2020-03-11T13:16:05 IST" finished-at="2020-03-11T13:16:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testValidLogin()[pri:0, instance:TestScripts.ValidLogin@5cb9f472]" name="testValidLogin" duration-ms="5659" started-at="2020-03-11T13:16:16 IST" finished-at="2020-03-11T13:16:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:TestScripts.ValidLogin@5cb9f472]" name="tearDown" is-config="true" duration-ms="806" started-at="2020-03-11T13:16:22 IST" finished-at="2020-03-11T13:16:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=SUCCESS method=ValidLogin.testValidLogin()[pri:0, instance:TestScripts.ValidLogin@5cb9f472] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestScripts.ValidLogin -->
      <class name="TestScripts.PatientSnapshotNotes">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestScripts.PatientSnapshotNotes@13805618]" name="setup" is-config="true" duration-ms="6794" started-at="2020-03-11T13:16:36 IST" finished-at="2020-03-11T13:16:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testpatientSnapshotNotes()[pri:0, instance:TestScripts.PatientSnapshotNotes@13805618]" name="testpatientSnapshotNotes" duration-ms="25696" started-at="2020-03-11T13:16:43 IST" finished-at="2020-03-11T13:17:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testpatientSnapshotNotes -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:TestScripts.PatientSnapshotNotes@13805618]" name="tearDown" is-config="true" duration-ms="805" started-at="2020-03-11T13:17:09 IST" finished-at="2020-03-11T13:17:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testpatientSnapshotNotes status=SUCCESS method=PatientSnapshotNotes.testpatientSnapshotNotes()[pri:0, instance:TestScripts.PatientSnapshotNotes@13805618] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestScripts.PatientSnapshotNotes -->
    </test> <!-- Test1 -->
  </suite> <!-- RegSuite -->
</testng-results>
